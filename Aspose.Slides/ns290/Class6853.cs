using ns284;

namespace ns290;

internal class Class6853 : Class6845
{
	private bool bool_0;

	private int int_0;

	public bool IsAutoGenerated
	{
		get
		{
			return bool_0;
		}
		set
		{
			bool_0 = value;
		}
	}

	public int ColumnIndex
	{
		get
		{
			return int_0;
		}
		set
		{
			int_0 = value;
		}
	}

	public int Rowspan => Style.Rowspan;

	public Class6852 Table
	{
		get
		{
			if (!(Row.Parent is Class6852 result))
			{
				throw new Exception70();
			}
			return result;
		}
	}

	public Class6854 Row
	{
		get
		{
			if (!(base.Parent is Class6854 result))
			{
				throw new Exception70();
			}
			return result;
		}
	}

	public int Colspan => Style.Colspan;

	public override Interface329 Style
	{
		get
		{
			method_0(base.Style);
			return base.Style;
		}
		set
		{
			method_0(value);
			base.Style = value;
		}
	}

	public Class6853(Class6844 parent)
		: base(parent)
	{
	}

	private void method_0(Interface329 style)
	{
		float num = style.MarginBottom.Value + style.MarginTop.Value + style.MarginRight.Value + style.MarginLeft.Value;
		if (num > 0f)
		{
			Class6959 class2 = (style.MarginLeft = new Class6959(0f));
			Class6959 class4 = (style.MarginRight = class2);
			Class6959 marginBottom = (style.MarginTop = class4);
			style.MarginBottom = marginBottom;
		}
		if (base.Parent != null && base.Parent is Class6854 && !(base.Parent as Class6854).Style.BackgroundColor.IsEmpty && style.BackgroundColor.IsEmpty)
		{
			style.BackgroundColor = (base.Parent as Class6854).Style.BackgroundColor;
		}
	}
}
