<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
<resheader name="resmimetype"><value>text/microsoft-resx</value></resheader><resheader name="version"><value>1.3</value></resheader><resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><data name="ResolutionFailed"><value>Resolution of the dependency failed, type = "{0}", name = "{1}".
Exception occurred while: {2}.
Exception is: {3} - {4}
-----------------------------------------------
At the time of the exception, the container was:
</value></data>
  <data name="CannotInjectMethodWithOutParams"><value>The method {0}.{1}({2}) has at least one out parameter. Methods with out parameters cannot be injected.</value></data>
  <data name="MethodParameterResolutionFailed"><value>The value for parameter "{1}" of method {0} could not be resolved. </value></data>
  <data name="MethodArgumentResolveOperation"><value>Resolving parameter "{0}" of method {1}.{2}</value></data>
  <data name="ProvidedStringArgMustNotBeEmpty"><value>The provided string argument must not be empty.</value></data>
  <data name="ResolutionWithMappingTraceDetail"><value>Resolving {0},{1} (mapped from {2}, {3})</value></data>
  <data name="NotAnArrayTypeWithRankOne"><value>The type {0} is not an array type with rank 1, and you are attempting to use a [DependencyArray] attribute on a parameter or property with this type.</value></data>
  <data name="MarkerBuildPlanInvoked"><value>The override marker build plan policy has been invoked. This should never happen, looks like a bug in the container.</value></data>
  <data name="TypeIsNotConstructable"><value>The type {0} cannot be constructed. You must configure the container to supply this value.</value></data>
  <data name="ResolvingPropertyValueOperation"><value>Resolving value for property {0}.{1}</value></data>
  <data name="InvokingConstructorOperation"><value>Calling constructor {0}</value></data>
  <data name="NoSuchConstructor"><value>The type {0} does not have a constructor that takes the parameters ({1}).</value></data>
  <data name="InvokingMethodOperation"><value>Calling method {0}.{1}</value></data>
  <data name="SelectedConstructorHasRefParameters"><value>The constructor {1} selected for type {0} has ref or out parameters. Such parameters are not supported for constructor injection.</value></data>
  <data name="MustHaveOpenGenericType"><value>The supplied type {0} must be an open generic type.</value></data>
  <data name="CannotExtractTypeFromBuildKey"><value>Cannot extract type from build key {0}.</value></data>
  <data name="CannotInjectOpenGenericMethod"><value>The method {1} on type {0} is marked for injection, but it is an open generic method. Injection cannot be performed.</value></data>
  <data name="MustHaveSameNumberOfGenericArguments"><value>The supplied type {0} does not have the same number of generic arguments as the target type {1}.</value></data>
  <data name="CannotConstructInterface"><value>The current type, {0}, is an interface and cannot be constructed. Are you missing a type mapping?</value></data>
  <data name="NoSuchProperty"><value>The type {0} does not contain an instance property named {1}.</value></data>
  <data name="UnknownType"><value>&lt;unknown&gt;</value></data>
  <data name="MultipleInjectionConstructors"><value>The type {0} has multiple constructors marked with the InjectionConstructor attribute. Unable to disambiguate.</value></data>
  <data name="CannotInjectIndexer"><value>The property {0} on type {1} is an indexer. Indexed properties cannot be injected.</value></data>
  <data name="KeyAlreadyPresent"><value>An item with the given key is already present in the dictionary.</value></data>
  <data name="OptionalDependenciesMustBeReferenceTypes"><value>Optional dependencies must be reference types. The type {0} is a value type.</value></data>
  <data name="CannotResolveOpenGenericType"><value>The type {0} is an open generic type. An open generic type cannot be resolved.</value></data>
  <data name="NotAGenericType"><value>The type {0} is not a generic type, and you are attempting to inject a generic parameter named "{1}".</value></data>
  <data name="LifetimeManagerInUse"><value>The lifetime manager is already registered. Lifetime managers cannot be reused, please create a new one.</value></data>
  <data name="PropertyNotSettable"><value>The property {0} on type {1} is not settable.</value></data>
  <data name="TypesAreNotAssignable"><value>The type {1} cannot be assigned to variables of type {0}.</value></data>
  <data name="ConstructorParameterResolutionFailed"><value>The parameter {0} could not be resolved when attempting to call constructor {1}.</value></data>
  <data name="ConstructorArgumentResolveOperation"><value>Resolving parameter "{0}" of constructor {1}</value></data>
  <data name="PropertyTypeMismatch"><value>The property {0} on type {1} is of type {2}, and cannot be injected with a value of type {3}.</value></data>
  <data name="CannotInjectStaticMethod"><value>The method {0}.{1}({2}) is static. Static methods cannot be injected.</value></data>
  <data name="NoConstructorFound"><value>The type {0} does not have an accessible constructor.</value></data>
  <data name="CannotInjectMethodWithOutParam"><value>The method {1} on type {0} has an out parameter. Injection cannot be performed.</value></data>
  <data name="ArgumentMustNotBeEmpty"><value>The provided string argument must not be empty.</value></data>
  <data name="MissingDependency"><value>Could not resolve dependency for build key {0}.</value></data>
  <data name="ExceptionNullParameterValue"><value>Parameter type inference does not work for null values. Indicate the parameter type explicitly using a properly configured instance of the InjectionParameter or InjectionParameter&lt;T&gt; classes.</value></data>
  <data name="SettingPropertyOperation"><value>Setting value for property {0}.{1}</value></data>
  <data name="CannotInjectMethodWithRefParams"><value>The method {0}.{1}({2}) has at least one ref parameter.Methods with ref parameters cannot be injected.</value></data>
  <data name="BuildFailedException"><value>The current build operation (build key {2}) failed: {3} (Strategy type {0}, index {1})</value></data>
  <data name="NoOperationExceptionReason"><value>while resolving</value></data>
  <data name="NoMatchingGenericArgument"><value>The type {0} does not have a generic argument named "{1}"</value></data>
  <data name="ResolutionTraceDetail"><value>Resolving {0},{1}</value></data>
  <data name="CannotInjectGenericMethod"><value>The method {0}.{1}({2}) is an open generic method. Open generic methods cannot be injected.</value></data>
  <data name="PropertyValueResolutionFailed"><value>The value for the property "{0}" could not be resolved.</value></data>
  <data name="AmbiguousInjectionConstructor"><value>The type {0} has multiple constructors of length {1}. Unable to disambiguate.</value></data>
  <data name="NoSuchMethod"><value>The type {0} does not have a public method named {1} that takes the parameters ({2}).</value></data>
  </root>