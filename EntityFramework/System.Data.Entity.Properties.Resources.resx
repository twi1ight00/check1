<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
<resheader name="resmimetype"><value>text/microsoft-resx</value></resheader><resheader name="version"><value>1.3</value></resheader><resheader name="reader"><value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><resheader name="writer"><value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value></resheader><data name="DbContext_MESTNotSupported"><value>The DbContext class cannot be used with models that have multiple entity sets per type (MEST).</value></data>
  <data name="MaxLengthAttributeConvention_InvalidMaxLength"><value>The MaxLengthAttribute on property '{0}' on type '{1} is not valid. The Length value must be greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length.</value></data>
  <data name="ConflictingConstraint"><value>The navigation property '{0}' declared on type '{1}' has been configured with conflicting foreign keys.</value></data>
  <data name="ValidationHeader"><value>One or more validation errors were detected during model generation:</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidOperationMultipleEndsInAssociation"><value>OnDelete can be specified on only one End of an EdmAssociation.</value></data>
  <data name="AssemblyMigrator_NonConfigurationType"><value>The type '{0}' is not a migrations configuration type.</value></data>
  <data name="UnableToDeterminePrincipal"><value>Unable to determine the principal end of an association between the types '{0}' and '{1}'. The principal end of this association must be explicitly configured using either the relationship fluent API or data annotations.</value></data>
  <data name="DbContext_ProviderNameMissing"><value>The connection string '{0}' in the application's configuration file does not contain the required providerName attribute."</value></data>
  <data name="Database_NonCodeFirstCompatibilityCheck"><value>Model compatibility cannot be checked because the DbContext instance was not created using Code First patterns. DbContext instances created from an ObjectContext or using an EDMX file cannot be checked for compatibility.</value></data>
  <data name="ConventionNotFound"><value>Unable to add the convention '{0}'. Could not find an existing convention of type '{1}' in the current convention set.</value></data>
  <data name="InvalidPropertiesExpression"><value>The properties expression '{0}' is not valid. The expression should represent a property: C#: 't =&gt; t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. When specifying multiple properties use an anonymous type: C#: 't =&gt; new {{ t.MyProperty1, t.MyProperty2 }}'  VB.Net: 'Function(t) New From {{ t.MyProperty1, t.MyProperty2 }}'.</value></data>
  <data name="AutomaticDataLoss"><value>Automatic migration was not applied because it would result in data loss.</value></data>
  <data name="EdmModel_Validator_Semantic_ConcurrencyRedefinedOnSubTypeOfEntitySetType"><value>Type '{0}' is derived from type '{1}' that is the type for EntitySet '{2}'. Type '{0}' defines new concurrency requirements that are not allowed for subtypes of base EntitySet types.</value></data>
  <data name="UnintentionalCodeFirstException_Message"><value>Code generated using the T4 templates for Database First and Model First development may not work correctly if used in Code First mode. To continue using Database First or Model First ensure that the Entity Framework connection string is specified in the config file of executing application. To use these classes, that were generated from Database First or Model First, with Code First add any additional configuration using attributes or the DbModelBuilder API and then remove the code that throws this exception.</value></data>
  <data name="IncorrectColumnCount"><value>The specified association foreign key columns '{0}' are invalid. The number of columns specified must match the number of primary key columns.</value></data>
  <data name="ForeignKeyAttributeConvention_OrderRequired"><value>Unable to determine a composite foreign key ordering for foreign key on type {0}. When using the ForeignKey data annotation on composite foreign key properties ensure order is specified by using the Column data annotation or the fluent API.</value></data>
  <data name="ConflictingConfigurationValue"><value>{0} = {1} conflicts with {2} = {3}</value></data>
  <data name="AutomaticDisabledException"><value>Unable to update database to match the current model because there are pending changes and automatic migration is disabled. Either write the pending model changes to a code-based migration or enable automatic migration. Set DbMigrationsConfiguration.AutomaticMigrationsEnabled to true to enable automatic migration.</value></data>
  <data name="DbEntityValidationException_ValidationFailed"><value>Validation failed for one or more entities. See 'EntityValidationErrors' property for more details.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmModel_NameIsTooLong"><value>The specified name must not be longer than 480 characters: '{0}'.</value></data>
  <data name="EdmxWriter_EdmxFromObjectContextNotSupported"><value>Creating a DbModelBuilder or writing the EDMX from a DbContext created using an existing ObjectContext is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel.</value></data>
  <data name="ForeignKeyAttributeConvention_InvalidKey"><value>The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. The foreign key name '{2}' was not found on the dependent type '{3}'. The Name value should be a comma separated list of foreign key property names.</value></data>
  <data name="FailedToGetProviderInformation"><value>An error occurred while getting provider information from the database. This can be caused by Entity Framework using an incorrect connection string. Check the inner exceptions for details and ensure that the connection string is correct.</value></data>
  <data name="AutoNotValidTarget"><value>'{0}' is not a valid target migration. When targeting a previously applied automatic migration, use the full migration id including timestamp.</value></data>
  <data name="DbSet_BadTypeForCreate"><value>Cannot call the Create method for the type '{0}' on a DbSet for entities of type '{1}'. Only entities of type '{1}' or derived from type '{1}' can be created.</value></data>
  <data name="EdmModel_Validator_Semantic_EndNameAlreadyDefinedDuplicate"><value>Each Name and PluralName in a relationship must be unique. '{0}' is already defined.</value></data>
  <data name="ArgumentIsNullOrWhitespace"><value>The argument '{0}' cannot be null, empty or contain only white space.</value></data>
  <data name="LoggingApplyMigration"><value>Applying explicit migration: {0}.</value></data>
  <data name="ModelBuilder_KeyPropertiesMustBePrimitive"><value>The property '{0}' cannot be used as a key property on the entity '{1}' because the property type is not a valid key type. Only scalar types, string and byte[] are supported key types.</value></data>
  <data name="DbSet_WrongEntityTypeFound"><value>The entity found was of type {0} when an entity of type {1} was requested.</value></data>
  <data name="DbEntityEntry_NotAComplexProperty"><value>The property '{0}' on type '{1}' is not a complex property. The ComplexProperty method can only be used with complex properties. Use the Property, Reference or Collection method.</value></data>
  <data name="DbEntityEntry_DottedPathMustBeProperty"><value>"The property path '{0}' cannot be used for navigation properties. Property paths can only be used to access primitive or complex properties."</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmNavigationProperty_ResultEndMustNotBeNull"><value>ResultEnd must not be null.</value></data>
  <data name="UnableToDispatchAddOrUpdate"><value>Unable to call public, instance method AddOrUpdate on derived IDbSet&lt;T&gt; type '{0}'. Method not found.</value></data>
  <data name="DbPropertyValues_WrongTypeForAssignment"><value>Cannot assign value of type '{0}' to property '{1}' of type '{2}' in property values for type '{3}'.</value></data>
  <data name="EdmModel_Validator_Semantic_KeyMissingOnEntityType"><value>EntityType '{0}' has no key defined. Define the key for this EntityType.</value></data>
  <data name="ConflictingMultiplicities"><value>The navigation property '{0}' declared on type '{1}' has been configured with conflicting multiplicities.</value></data>
  <data name="NavigationInverseItself"><value>The navigation property '{0}' declared on type '{1}' cannot be the inverse of itself.</value></data>
  <data name="ForeignKeyAttributeConvention_EmptyKey"><value>The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. Name must not be empty.</value></data>
  <data name="InvalidTableMapping_NoTableName"><value>Map was called more than once for type '{0}' and at least one of the calls didn't specify the target table name.</value></data>
  <data name="InvalidComplexPropertyExpression"><value>The expression '{0}' is not a valid property expression. The expression should represent a property: C#: 't =&gt; t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. Use dotted paths for nested properties: C#: 't =&gt; t.MyProperty.MyProperty'  VB.Net: 'Function(t) t.MyProperty.MyProperty'.</value></data>
  <data name="InvalidComplexType"><value>The type '{0}' was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from ComplexObject.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMemberNameMatchesTypeName"><value>Name '{0}' cannot be used in type '{1}'. Member names cannot be the same as their enclosing type.</value></data>
  <data name="DbPropertyEntry_NotSupportedForDetached"><value>Member '{0}' cannot be called for property '{1}' because the entity of type '{2}' does not exist in the context. To add an entity to the context call the Add or Attach method of DbSet&lt;{2}&gt;.</value></data>
  <data name="DbPropertyValues_CannotGetStoreValuesWhenComplexPropertyIsNull"><value>The property '{0}' in the entity of type '{1}' is null. Store values cannot be obtained for an entity with a null complex property.</value></data>
  <data name="DbCollectionEntry_CannotSetCollectionProp"><value>The collection navigation property '{0}' on the entity of type '{1}' cannot be set because the entity type does not define a navigation property with a set accessor.</value></data>
  <data name="ConflictingMapping"><value>The navigation property '{0}' declared on type '{1}' has been configured with conflicting mapping information.</value></data>
  <data name="UpgradingHistoryTable"><value>Upgrading history table.</value></data>
  <data name="Database_NoDatabaseMetadata"><value>Model compatibility cannot be checked because the database does not contain model metadata. Model compatibility can only be checked for databases created using Code First or Code First Migrations.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidComplexTypeAbstract"><value>ComplexType '{0}' is marked as abstract. Abstract ComplexTypes are only supported in version 1.1 EDM models.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationEnd_EntityTypeMustNotBeNull"><value>EntityType must not be null.</value></data>
  <data name="InvalidDiscriminatorType"><value>Values of type '{0}' cannot be used as type discriminator values. Supported types include byte, signed byte, bool, int16, int32, int64, and string.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeOne"><value>Multiplicity is not valid in Role '{0}' in relationship '{1}'. Because the Dependent Role refers to the key properties, the upper bound of the multiplicity of the Dependent Role must be '1'.</value></data>
  <data name="EdmModel_Validator_Semantic_BadNavigationPropertyRolesCannotBeTheSame"><value>NavigationProperty is not valid. The FromRole and ToRole are the same.</value></data>
  <data name="UnmappedAbstractType"><value>The abstract type '{0}' has no mapped descendents and so cannot be mapped. Either remove '{0}' from the model or add one or more types deriving from '{0}' to the model. </value></data>
  <data name="Database_InitializeFromLegacyConfigFailed"><value>Failed to set database initializer of type '{0}' for DbContext type '{1}' specified in the application configuration. Entries should be of the form 'key="DatabaseInitializerForType MyNamespace.MyDbContextClass, MyAssembly" value="MyNamespace.MyInitializerClass, MyAssembly"' or 'key="DatabaseInitializerForType MyNamespace.MyDbContextClass, MyAssembly" value="Disabled"'. Also verify that 'DatabaseInitializerArgumentForType' entries are present for every parameter of the database initializer constructor. See inner exception for details. Consider using the &lt;entityFramework&gt; configuration section to set the database initializer (http://go.microsoft.com/fwlink/?LinkID=237468).</value></data>
  <data name="EntityTypeConfigurationMismatch"><value>The type '{0}' has already been configured as a complex type. It cannot be reconfigured as an entity type.</value></data>
  <data name="AssemblyMigrator_NoDefaultConstructor"><value>The migrations configuration type '{0}' must have a public default constructor.</value></data>
  <data name="PropertyNotFound"><value>The property '{0}' is not a declared property on type '{1}'. Verify that the property has not been explicitly excluded from the model by using the Ignore method or NotMappedAttribute data annotation. Make sure that it is a valid primitive property.</value></data>
  <data name="ToTable_InvalidTableName"><value>The qualified table name '{0}' contains an invalid table name. Table names must have a non-zero length.</value></data>
  <data name="ContextConfiguredMultipleTimes"><value>Configuration for DbContext type '{0}' is specified multiple times in the application configuration. Each context can only be configured once.</value></data>
  <data name="MaxLengthAttribute_ValidationError"><value>The field {0} must be a string or array type with a maximum length of '{1}'.</value></data>
  <data name="AutomaticMigration"><value>AutomaticMigration</value></data>
  <data name="Database_FailedToResolveType"><value>The type '{0}' could not be found. The type name must be an assembly-qualified name.</value></data>
  <data name="EdmModel_Validator_Semantic_SameRoleReferredInReferentialConstraint"><value>In relationship '{0}', the Principal and Dependent Role of the referential constraint refer to the same Role in the relationship type.</value></data>
  <data name="LoggingAlreadyAtTarget"><value>Target database is already at version {0}.</value></data>
  <data name="Database_DatabaseAlreadyExists"><value>Database '{0}' cannot be created because it already exists.</value></data>
  <data name="EdmModel_Validator_Semantic_SimilarRelationshipEnd"><value>Role '{0}' in AssociationSets '{1}' and '{2}' refers to the same EntitySet '{3}' in EntityContainer '{4}'. Make sure that if two or more AssociationSets refer to the same AssociationType, the ends do not refer to the same EntitySet.</value></data>
  <data name="Database_InitializationException"><value>An exception occurred while initializing the database. See the InnerException for details.</value></data>
  <data name="ConflictingCascadeDeleteOperation"><value>The navigation property '{0}' declared on type '{1}' has been configured with conflicting cascade delete operations using 'WillCascadeOnDelete'.</value></data>
  <data name="InvalidEntityType"><value>The type '{0}' was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from EntityObject.</value></data>
  <data name="ValidationItemFormat"><value>\t{0}: {1}: {2}</value></data>
  <data name="DbEntityEntry_UsedReferenceForCollectionProp"><value>The property '{0}' on type '{1}' is a collection navigation property. The Collection method should be used instead of the Reference method.</value></data>
  <data name="Database_InitializeFromConfigFailed"><value>Failed to set database initializer of type '{0}' for DbContext type '{1}' specified in the application configuration. See inner exception for details.</value></data>
  <data name="SqlCeColumnRenameNotSupported"><value>Direct column renaming is not supported by SQL Server Compact. To rename a column in SQL Server Compact, you will need to recreate it.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidPropertyType"><value>A property cannot be of type '{0}'. The property type must be a ComplexType or a PrimitiveType.</value></data>
  <data name="DbPropertyValues_NestedPropertyValuesNull"><value>The value of the nested property values property '{0}' on the values for entity of type '{1}' is null. Nested property values cannot be set to null and values cannot be set for null complex properties.</value></data>
  <data name="DbSet_MultipleAddedEntitiesFound"><value>Multiple entities were found in the Added state that match the given primary key values.</value></data>
  <data name="InversePropertyAttributeConvention_SelfInverseDetected"><value>A relationship cannot be established from property '{0}' on type '{1}' to property '{0}' on type '{1}'. Check the values in the InversePropertyAttribute to ensure relationship definitions are unique and reference from one navigation property to its corresponding inverse navigation property.</value></data>
  <data name="InvalidChainedMappingSyntax"><value>The derived type '{0}' has already been mapped using the chaining syntax. A derived type can only be mapped once using the chaining syntax.</value></data>
  <data name="DbEntityEntry_WrongGenericForCollectionNavProp"><value>The generic type argument '{0}' cannot be used with the Member method when accessing the collection navigation property '{1}' on entity type '{2}'. The generic type argument '{3}' must be used instead.</value></data>
  <data name="EdmModel_Validator_Semantic_BadNavigationPropertyUndefinedRole"><value>NavigationProperty is not valid. Role '{0}' or Role '{1}' is not defined in Relationship '{2}'.</value></data>
  <data name="DuplicateStructuralTypeConfiguration"><value>A configuration for type '{0}' has already been added. To reference the existing configuration use the Entity&lt;T&gt;() or ComplexType&lt;T&gt;() methods.</value></data>
  <data name="DbPropertyEntry_CannotGetCurrentValue"><value>Cannot get value for property '{0}' from entity of type '{1}' because the property has no get accessor.</value></data>
  <data name="DbSet_WrongKeyValueType"><value>The type of one of the primary key values did not match the type defined in the entity. See inner exception for details.</value></data>
  <data name="DbSet_DbSetUsedWithComplexType"><value>The type '{0}' is mapped as a complex type. The Set method, DbSet objects, and DbEntityEntry objects can only be used with entity types, not complex types.</value></data>
  <data name="EdmModel_Validator_Semantic_EntitySetTypeHasNoKeys"><value>EntitySet '{0}' is based on type '{1}' that has no keys defined.</value></data>
  <data name="EdmModel_Validator_Semantic_DuplicateEntityContainerMemberName"><value>Each member name in an EntityContainer must be unique. A member with name '{0}' is already defined.</value></data>
  <data name="DbEntityEntry_DottedPartNotComplex"><value>"The property '{0}' from the property path '{1}' is not a complex property on type '{2}'. Property paths must be composed of complex properties for all except the final property."</value></data>
  <data name="InvalidComplexPropertiesExpression"><value>The properties expression '{0}' is not valid. The expression should represent a property: C#: 't =&gt; t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. When specifying multiple properties use an anonymous type: C#: 't =&gt; new {{ t.MyProperty1, t.MyProperty2 }}'  VB.Net: 'Function(t) New From {{ t.MyProperty1, t.MyProperty2 }}'.</value></data>
  <data name="SqlConnectionFactory_MdfNotSupported"><value>The database name '{0}' is not supported because it is an MDF file name. A full connection string must be provided to attach an MDF file.</value></data>
  <data name="UnsupportedHybridInheritanceMapping"><value>The type '{0}' cannot be mapped as defined because it maps inherited properties from types that use entity splitting or another form of inheritance. Either choose a different inheritance mapping strategy so as to not map inherited properties, or change all types in the hierarchy to map inherited properties and to not use splitting. </value></data>
  <data name="MigrationNotFound"><value>The specified target migration '{0}' does not exist. Ensure that target migration refers to an existing migration id.</value></data>
  <data name="DbMember_BadTypeForCast"><value>Cannot create a {0}&lt;{1}, {2}&gt; from a non-generic {0} for entities of type '{3}' with property of type '{4}'.</value></data>
  <data name="LoggingPendingMigrationsDown"><value>Reverting migrations: [{1}].</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationConstraint_DependentEndMustNotBeNull"><value>DependentEnd must not be null.</value></data>
  <data name="DbPropertyValues_CannotGetValuesForState"><value>{0} cannot be used for entities in the {1} state.</value></data>
  <data name="AutoNotValidForScriptWindows"><value>'{0}' is not a valid migration. Explicit migrations must be used for both source and target when scripting the upgrade between them.</value></data>
  <data name="DbEntityEntry_WrongGenericForProp"><value>The property '{0}' on entity type '{1}' cannot be used for objects of type '{2}' because it is a property for objects of type '{3}'.</value></data>
  <data name="AssemblyMigrator_NoConfigurationWithName"><value>The migrations configuration type '{0}' was not be found in the assembly '{1}'.</value></data>
  <data name="PartialFkOperation"><value>The Foreign Key on table '{0}' with columns '{1}' could not be created because the principal key columns could not be determined. Use the AddForeignKey fluent API to fully specify the Foreign Key.</value></data>
  <data name="LoggingMetadataUpdate"><value>[Updating EdmMetadata model hash]</value></data>
  <data name="AmbiguousMigrationName"><value>The specified migration name '{0}' is ambiguous. Specify the full migration id including timestamp instead.</value></data>
  <data name="DbPropertyValues_AttemptToSetNonValuesOnComplexProperty"><value>A property of a complex type must be set to an instance of the generic or non-generic DbPropertyValues class for that type.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidKeyNullablePart"><value>Key part '{0}' for type '{1}' is not valid. All parts of the key must be non-nullable.</value></data>
  <data name="DbExtensions_InvalidIncludePathExpression"><value>The Include path expression must refer to a navigation property defined on the type. Use dotted paths for reference navigation properties and the Select operator for collection navigation properties.</value></data>
  <data name="DbQuery_BindingToDbQueryNotSupported"><value>Data binding directly to a store query (DbSet, DbQuery, DbSqlQuery) is not supported. Instead populate a DbSet with data, for example by calling Load on the DbSet, and then bind to local data. For WPF bind to DbSet.Local. For WinForms bind to DbSet.Local.ToBindingList().</value></data>
  <data name="EntityMappingConfiguration_DuplicateMappedProperty"><value>Properties for type '{0}' can only be mapped once. The non-key property '{1}' is mapped more than once. Ensure the Properties method specifies each non-key property only once.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationSet_TargetSetMustNotBeNull"><value>TargetSet must not be null.</value></data>
  <data name="InvalidNotNullCondition"><value>An "is not null" condition cannot be specified on property '{0}' on type '{1}' because this property is not included in the model. Check that the property has not been explicitly excluded from the model by using the Ignore method or NotMappedAttribute data annotation.</value></data>
  <data name="MetadataOutOfDate"><value>Cannot scaffold the next migration because the target database was created with a version of Code First earlier than EF 4.3 and does not contain the migrations history table. To start using migrations against this database, ensure the current model is compatible with the target database and execute the migrations Update process. (In Visual Studio you can use the Update-Database command from Package Manager Console to execute the migrations Update process).</value></data>
  <data name="EdmModel_Validator_Semantic_DuplicateEndName"><value>The end name  '{0}' is already defined.</value></data>
  <data name="ConflictingPropertyConfiguration"><value>Conflicting configuration settings were specified for property '{0}' on type '{1}': {2}</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmEntitySet_ElementTypeMustNotBeNull"><value>ElementType must not be null.</value></data>
  <data name="EdmModel_Validator_Semantic_SystemNamespaceEncountered"><value>The namespace '{0}' is a system namespace and cannot be used by other schemas. Choose another namespace name.</value></data>
  <data name="CircularComplexTypeHierarchy"><value>A circular ComplexType hierarchy was detected. Self-referencing ComplexTypes are not supported.</value></data>
  <data name="LazyInternalContext_CannotReplaceDbConnectionWithEfConnection"><value>Can not override the connection for this context with an EntityConnection because the original connection was a standard DbConnection.</value></data>
  <data name="AssemblyMigrator_GenericConfigurationType"><value>The migrations configuration type '{0}' must not be generic.</value></data>
  <data name="DbUnexpectedValidationException_IValidatableObject"><value>An unexpected exception was thrown during validation of '{0}' when invoking {1}.Validate. See the inner exception for details.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmTypeReferenceNotValid"><value>The type is not a valid EdmTypeReference.</value></data>
  <data name="BootstrapMigration"><value>BootstrapMigration</value></data>
  <data name="DbSet_EntityTypeNotInModel"><value>The entity type {0} is not part of the model for the current context.</value></data>
  <data name="DbEntityEntry_NotAProperty"><value>The property '{0}' on type '{1}' is not a primitive property, complex property, collection navigation property, or reference navigation property.</value></data>
  <data name="ToTable_InvalidSchemaName"><value>The qualified table name '{0}' contains an invalid schema name. Schema names must have a non-zero length.</value></data>
  <data name="DbContext_ConnectionHasModel"><value>Cannot initialize a DbContext from an entity connection string or an EntityConnection instance together with a DbCompiledModel. If an entity connection string or EntityConnection instance is used, then the model will be created from the metadata in the connection. If a DbCompiledModel is used, then the connection supplied should be a standard database connection (for example, a SqlConnection instance) rather than an entity connection.</value></data>
  <data name="EntityMappingConfiguration_InvalidTableSharing"><value>The entity types '{0}' and '{1}' cannot share table '{2}' because they are not in the same type hierarchy or do not have a valid one to one foreign key relationship with matching primary keys between them.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleUpperBoundMustBeOne"><value>Multiplicity is not valid in Role '{0}' in relationship '{1}'. Valid values for multiplicity for the Principal Role are '0..1' or '1'.</value></data>
  <data name="DbSet_PocoAndNonPocoMixedInSameAssembly"><value>The type '{0}' is not attributed with EdmEntityTypeAttribute but is contained in an assembly attributed with EdmSchemaAttribute. POCO entities that do not use EdmEntityTypeAttribute cannot be contained in the same assembly as non-POCO entities that use EdmEntityTypeAttribute.</value></data>
  <data name="LoggingRevertMigration"><value>Reverting explicit migration: {0}.</value></data>
  <data name="Serializer_OneNamespaceAndOneContainer"><value>Serializer can only serialize an EdmModel that has one EdmNamespace and one EdmEntityContainer.</value></data>
  <data name="EntityMappingConfiguration_DuplicateMapInheritedProperties"><value>Properties for type '{0}' can only be mapped once. Ensure the MapInheritedProperties method is only used during one call to the Map method.</value></data>
  <data name="ModelBuilder_ProviderNameNotFound"><value>Unable to determine the provider name for connection of type '{0}'.</value></data>
  <data name="AssemblyMigrator_MultipleConfigurations"><value>More than one migrations configuration type was found in the assembly '{0}'. Specify the name of the one to use.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV1"><value>Multiplicity conflicts with the referential constraint in Role '{0}' in relationship '{1}'. Because at least one  of the properties in the Dependent Role is non-nullable, multiplicity of the Principal Role must be '1'.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV2"><value>Multiplicity conflicts with the referential constraint in Role '{0}' in relationship '{1}'. Because all of the properties in the Dependent Role are non-nullable, multiplicity of the Principal Role must be '1'.</value></data>
  <data name="DbPropertyValues_AttemptToSetValuesFromWrongType"><value>Cannot copy from property values for object of type '{0}' into property values for object of type '{1}'.</value></data>
  <data name="DbEntityEntry_NotSupportedForDetached"><value>Member '{0}' cannot be called for the entity of type '{1}' because the entity does not exist in the context. To add an entity to the context call the Add or Attach method of DbSet&lt;{1}&gt;.</value></data>
  <data name="TableNotFound"><value>The specified table '{0}' was not found in the model. Ensure that the table name has been correctly specified.</value></data>
  <data name="EdmModel_Validator_Semantic_EndWithManyMultiplicityCannotHaveOperationsSpecified"><value>End '{0}' on relationship '{1}' cannot have an operation specified because its multiplicity is '*'. Operations cannot be specified on ends with multiplicity '*'.</value></data>
  <data name="DownScriptWindowsNotSupported"><value>Scripting the downgrade between two specified migrations is not supported.</value></data>
  <data name="EdmModel_Validator_Syntactic_MissingName"><value>The name is missing or not valid.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidPropertyType_V1_1"><value>A property cannot be of type '{0}'. The property type must be a ComplexType, a PrimitiveType, or a CollectionType.</value></data>
  <data name="EdmModel_Validator_Semantic_DuplicatePropertyNameSpecifiedInEntityKey"><value>The key specified in EntityType '{0}' is not valid. Property '{1}' is referenced more than once in the Key element.</value></data>
  <data name="MinLengthAttribute_ValidationError"><value>The field {0} must be a string or array type with a minimum length of '{1}'.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeMany"><value>Multiplicity is not valid in Role '{0}' in relationship '{1}'. Because the Dependent Role properties are not the key properties, the upper bound of the multiplicity of the Dependent Role must be '*'.</value></data>
  <data name="MigrationsNamespaceNotUnderRootNamespace"><value>In VB.NET projects, the migrations namespace '{0}' must be under the root namespace '{1}'. Update the migrations project's root namespace to allow classes under the migrations namespace to be added.</value></data>
  <data name="LoggingSeedingDatabase"><value>Running Seed method.</value></data>
  <data name="AssemblyMigrator_AbstractConfigurationType"><value>The migrations configuration type '{0}' must not be abstract.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationConstraint_DependentPropertiesMustNotBeEmpty"><value>DependentProperties must not be empty.</value></data>
  <data name="AssemblyMigrator_MultipleConfigurationsWithName"><value>More than one migrations configuration type '{0}' was found in the assembly '{1}'. Specify the fully qualified name of the one to use.</value></data>
  <data name="DbContext_IndependentAssociationUpdateException"><value>An error occurred while saving entities that do not expose foreign key properties for their relationships. The EntityEntries property will return null because a single entity cannot be identified as the source of the exception. Handling of exceptions while saving can be made easier by exposing foreign key properties in your entity types. See the InnerException for details.</value></data>
  <data name="EdmModel_Validator_Semantic_NullableComplexType"><value>A nullable ComplexType is not supported. Property '{0}' must not allow nulls.</value></data>
  <data name="MaxLengthAttribute_InvalidMaxLength"><value>MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to  indicate that the string or array can have the maximum allowable length.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidKeyKeyDefinedInBaseClass"><value>Key usage is not valid. The {0} class  cannot define keys because one of its base classes ('{1}') defines keys.</value></data>
  <data name="DbContext_ConnectionFactoryReturnedNullConnection"><value>The DbConnectionFactory instance returned a null connection.</value></data>
  <data name="Database_BadLegacyInitializerEntry"><value>The DbContextDatabaseInitializer entry 'key="{0}" value="{1}"' in the application configuration is not valid. Entries should be of the form 'key="DatabaseInitializerForType MyNamespace.MyDbContextClass, MyAssembly" value="MyNamespace.MyInitializerClass, MyAssembly"' or 'key="DatabaseInitializerForType MyNamespace.MyDbContextClass, MyAssembly" value="Disabled"'. Consider using the &lt;entityFramework&gt; configuration section to set the database initializer (http://go.microsoft.com/fwlink/?LinkID=237468).</value></data>
  <data name="DbEntity_BadTypeForCast"><value>Cannot create a {0}&lt;{1}&gt; from a non-generic {0} for objects of type '{2}'.</value></data>
  <data name="LoggingTargetDatabase"><value>Target database is: {0}.</value></data>
  <data name="EdmModel_Validator_Semantic_CycleInTypeHierarchy"><value>A cycle was detected in the type hierarchy of '{0}'.</value></data>
  <data name="LoggingNoExplicitMigrations"><value>No pending explicit migrations.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNullableV1"><value>Multiplicity is not valid in Role '{0}' in relationship '{1}'. Because all the properties in the Dependent Role are nullable, multiplicity of the Principal Role must be '0..1'.</value></data>
  <data name="NavigationPropertyNotFound"><value>The navigation property '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid navigation property.</value></data>
  <data name="DbUnexpectedValidationException_ValidationAttribute"><value>An unexpected exception was thrown during validation of '{0}' when invoking {1}.IsValid. See the inner exception for details.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidComplexTypePolymorphic"><value>ComplexType '{0}' has a BaseType specified. ComplexType inheritance is only supported in version 1.1 EDM models.</value></data>
  <data name="PreconditionFailed"><value>The precondition '{0}' failed. {1}</value></data>
  <data name="DbPropertyEntry_CannotSetCurrentValue"><value>Cannot set value for property '{0}' on entity of type '{1}' because the property has no set accessor.</value></data>
  <data name="DbContextServices_MissingDefaultCtor"><value>The context factory type '{0}' must have a public default constructor.</value></data>
  <data name="EdmModel_Validator_Semantic_TypeMismatchRelationshipConstraint"><value>The types of all properties in the Dependent Role of a referential constraint must be the same as the corresponding property types in the Principal Role. The type of property '{0}' on entity '{1}' does not match the type of property '{2}' on entity '{3}' in the referential constraint '{4}'.</value></data>
  <data name="DbPropertyValues_CannotSetNullValue"><value>Cannot set non-nullable property '{0}' of type '{1}' to null on object of type '{2}'.</value></data>
  <data name="InvalidTableMapping"><value>The type '{0}' has already been mapped to table '{1}'. Specify all mapping aspects of a table in a single Map call.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationSet_ElementTypeMustNotBeNull"><value>ElementType must not be null.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraint"><value>There is no property with name '{0}' defined in the type referred to by Role '{1}'.</value></data>
  <data name="EdmModel_Validator_Semantic_PropertyNameAlreadyDefinedDuplicate"><value>Each property name in a type must be unique. Property name '{0}' is already defined.</value></data>
  <data name="KeyRegisteredOnDerivedType"><value>A key is registered for the derived type '{0}'. Keys can only be registered for the root type '{1}'.</value></data>
  <data name="LoggingPendingMigrations"><value>Applying explicit migrations: [{1}].</value></data>
  <data name="EdmxWriter_EdmxFromModelFirstNotSupported"><value>Creating a DbModelBuilder or writing the EDMX from a DbContext created using Database First or Model First is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel.</value></data>
  <data name="EdmPrimitiveType_SetPropertyNotSupported"><value>The '{0}' property of EdmPrimitiveType is fixed and cannot be set.</value></data>
  <data name="AssemblyMigrator_NoConfiguration"><value>No migrations configuration type was found in the assembly '{0}'. (In Visual Studio you can use the Enable-Migrations command from Package Manager Console to add a migrations configuration).</value></data>
  <data name="Mapping_MESTNotSupported"><value>Multiple object sets per type are not supported. The object sets '{0}' and '{1}' can both contain instances of type '{2}'.</value></data>
  <data name="KeyPropertyNotFound"><value>The key component '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid primitive property.</value></data>
  <data name="DbContext_ConnectionStringNotFound"><value>No connection string named '{0}' could be found in the application config file.</value></data>
  <data name="LoggingTargetDatabaseFormat"><value>'{1}' (DataSource: {0}, Provider: {2}, Origin: {3})</value></data>
  <data name="EntityMappingConfiguration_DuplicateMappedProperties"><value>Properties for type '{0}' can only be mapped once. Ensure the Properties method is used and that repeated calls specify each non-key property only once.</value></data>
  <data name="DbPropertyValues_PropertyDoesNotExist"><value>The '{0}' property does not exist or is not mapped for the type '{1}'.</value></data>
  <data name="LazyInternalContext_CannotReplaceEfConnectionWithDbConnection"><value>Can not override the connection for this context with a standard DbConnection because the original connection was an EntityConnection.</value></data>
  <data name="DbPropertyValues_ComplexObjectCannotBeNull"><value>The value of the complex property '{0}' on entity of type '{1}' is null. Complex properties cannot be set to null and values cannot be set for null complex properties.</value></data>
  <data name="DbContext_Disposed"><value>The operation cannot be completed because the DbContext has been disposed.</value></data>
  <data name="EntityMappingConfiguration_CannotMapIgnoredProperty"><value>The property '{1}' on type '{0}' cannot be mapped because it has been explicitly excluded from the model.</value></data>
  <data name="EdmModel_Validator_Semantic_MismatchNumberOfPropertiesinRelationshipConstraint"><value>The number of properties in the Dependent and Principal Roles in a relationship constraint must be identical.</value></data>
  <data name="DbContext_ContextUsedInModelCreating"><value>The context cannot be used while the model is being created.</value></data>
  <data name="DbEntityEntry_WrongGenericForNavProp"><value>The navigation property '{0}' on entity type '{1}' cannot be used for entities of type '{2}' because it refers to entities of type '{3}'.</value></data>
  <data name="DbEntityEntry_UsedCollectionForReferenceProp"><value>The property '{0}' on type '{1}' is a reference navigation property. The Reference method should be used instead of the Collection method.</value></data>
  <data name="DbEntityEntry_NotANavigationProperty"><value>The property '{0}' on type '{1}' is not a navigation property. The Reference and Collection methods can only be used with navigation properties. Use the Property or ComplexProperty method.</value></data>
  <data name="LoggingHistoryDelete"><value>[Deleting migration history record]</value></data>
  <data name="InvalidPropertyExpression"><value>The expression '{0}' is not a valid property expression. The expression should represent a property: C#: 't =&gt; t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'.</value></data>
  <data name="DbPropertyValues_AttemptToSetValuesFromWrongObject"><value>Cannot copy values from DbPropertyValues for type '{0}' into DbPropertyValues for type '{1}'.</value></data>
  <data name="DbPropertyEntry_SettingEntityRefNotSupported"><value>Cannot set value for property '{0}' on entity of type '{1}' because the property has no set accessor and is in the '{2}' state.</value></data>
  <data name="LoggingExplicit"><value>Explicit</value></data>
  <data name="DbEntityEntry_BadPropertyExpression"><value>The expression passed to method {0} must represent a property defined on the type '{1}'.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidCollectionKindNotCollection"><value>Property '{0}' has a CollectionKind specified but is not a collection property.</value></data>
  <data name="LoggingRevertAutoMigrate"><value>Reverting automatic migration: {0}.</value></data>
  <data name="InversePropertyAttributeConvention_PropertyNotFound"><value>The InversePropertyAttribute on property '{2}' on type '{3}' is not valid. The property '{0}' is not a valid navigation property on the related type '{1}'. Ensure that the property exists and is a valid reference or collection navigation property.</value></data>
  <data name="ForeignKeyPropertyNotFound"><value>The foreign key component '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid primitive property.</value></data>
  <data name="DatabaseInitializationStrategy_ModelMismatch"><value>The model backing the '{0}' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidCollectionKindNotV1_1"><value>Property '{0}' has a CollectionKind specified. CollectionKind is only supported in version 1.1 EDM models.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidToPropertyInRelationshipConstraint"><value>Properties referred by the Dependent Role '{0}' must be a subset of the key of the EntityType '{1}' referred to by the Dependent Role in the referential constraint for relationship '{2}'.</value></data>
  <data name="SetConnectionFactoryFromConfigFailed"><value>Failed to set Database.DefaultConnectionFactory to an instance of the '{0}' type as specified in the application configuration. See inner exception for details.</value></data>
  <data name="DbConnectionInfo_ConnectionStringNotFound"><value>No connection string named '{0}' could be found in the application config file.</value></data>
  <data name="EdmModel_Validator_Semantic_InvalidEntitySetNameReference"><value>The referenced EntitySet '{0}' for End '{1}' could not be found in the containing EntityContainer.</value></data>
  <data name="EdmModel_Validator_Semantic_EntityKeyMustBeScalar"><value>The property '{0}' in EntityType '{1}' is not valid. All properties that are part of the EntityKey must be of PrimitiveType.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationType_AssocationEndMustNotBeNull"><value>AssociationEnd must not be null.</value></data>
  <data name="BadLocalDBDatabaseName"><value>Connection to the database failed. The connection string is configured with an invalid LocalDB server name. This may have been set in 'global.asax' by a pre-release version of MVC4. The default connection factory is now set in web.config so the line in 'global.asax' starting with 'Database.DefaultConnectionFactory = ' should be removed. See http://go.microsoft.com/fwlink/?LinkId=243166 for details.</value></data>
  <data name="EagerInternalContext_CannotSetConnectionInfo"><value>The connection can not be overridden because this context was created from an existing ObjectContext.</value></data>
  <data name="InitialCreate"><value>InitialCreate</value></data>
  <data name="ArgumentPropertyIsNull"><value>The argument property '{0}' cannot be null.</value></data>
  <data name="DbPropertyValues_PropertyValueNamesAreReadonly"><value>The set of property value names is read-only.</value></data>
  <data name="LoggingHistoryInsert"><value>[Inserting migration history record]</value></data>
  <data name="DbSet_WrongNumberOfKeyValuesPassed"><value>The number of primary key values passed must match number of primary key values defined on the entity.</value></data>
  <data name="DbModelBuilder_MissingRequiredCtor"><value>The context type '{0}' must have a public constructor taking an EntityConnection.</value></data>
  <data name="ContextNotConstructible"><value>The target context '{0}' is not constructible. Add a default constructor or provide an implementation of IDbContextFactory.</value></data>
  <data name="CodeFirstCachedMetadataWorkspace_SameModelDifferentProvidersNotSupported"><value>Using the same DbCompiledModel to create contexts against different types of database servers is not supported. Instead, create a separate DbCompiledModel for each type of server being used.</value></data>
  <data name="DbPropertyEntry_NotSupportedForPropertiesNotInTheModel"><value>Member '{0}' cannot be called for property '{1}' on entity of type '{2}' because the property is not part of the Entity Data Model.</value></data>
  <data name="ComplexTypeConfigurationMismatch"><value>The type '{0}' has already been configured as an entity type. It cannot be reconfigured as a complex type.</value></data>
  <data name="EdmModel_Validator_Semantic_TypeNameAlreadyDefinedDuplicate"><value>Each type name in a schema must be unique. Type name '{0}' is already defined.</value></data>
  <data name="DbPropertyEntry_CannotMarkPropertyUnmodified"><value>Setting IsModified to false for a modified property is not supported.</value></data>
  <data name="MinLengthAttribute_InvalidMinLength"><value>MinLengthAttribute must have a Length value that is zero or greater.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmNavigationProperty_AssocationMustNotBeNull"><value>Association must not be null.</value></data>
  <data name="StringLengthAttributeConvention_InvalidMaximumLength"><value>The StringLengthAttribute on property '{0}' on type '{1}' is not valid. The maximum length must be greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length.</value></data>
  <data name="ForeignKeyAttributeConvention_InvalidNavigationProperty"><value>The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. The navigation property '{2}' was not found on the dependent type '{1}'. The Name value should be a valid navigation property name.</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmModel_NameIsNotAllowed"><value>The specified name is not allowed: '{0}'.</value></data>
  <data name="ConflictingColumnConfiguration"><value>Conflicting configuration settings were specified for column '{0}' on table '{1}': {2}</value></data>
  <data name="EdmModel_Validator_Syntactic_EdmAssociationSet_SourceSetMustNotBeNull"><value>SourceSet must not be null.</value></data>
  <data name="ModelGeneration_UnableToDetermineKeyOrder"><value>Unable to determine composite primary key ordering for type '{0}'. Use the ColumnAttribute or the HasKey method to specify an order for composite primary keys.</value></data>
  <data name="LoggingAutoMigrate"><value>Applying automatic migration: {0}.</value></data>
  <data name="DuplicateEntryInUserDictionary"><value>The {0} value '{1}' already exists in the user-defined dictionary.</value></data>
  <data name="DbEntityEntry_NotAScalarProperty"><value>The property '{0}' on type '{1}' is not a primitive or complex property. The Property method can only be used with primitive or complex properties. Use the Reference or Collection method.</value></data>
  <data name="DbSet_BadTypeForAddAttachRemove"><value>Cannot call the {0} method for an entity of type '{1}' on a DbSet for entities of type '{2}'. Only entities of type '{2}' or derived from type '{2}' can be added, attached, or removed.</value></data>
  <data name="ConflictingInferredColumnType"><value>Values of incompatible types ('{1}' and '{2}') were assigned to the '{0}' discriminator column. Values of the same type must be specified. To explicitly specify the type of the discriminator column use the HasColumnType method.</value></data>
  <data name="InvalidEntitySplittingProperties"><value>Not all properties for type '{0}' have been mapped. Either map those properties or explicitly excluded them from the model.</value></data>
  <data name="DbContext_ProviderReturnedNullConnection"><value>The provider factory returned a null connection.</value></data>
  </root>